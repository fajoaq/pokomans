---
import { getPMoves } from "../lib/pokomanStore";

import StatLayout from "./stat-layout.astro";
import MoveCard from "./moveset-layout.astro";

const { frontmatter } = Astro.props;
const { hp, attack, defance, ageeleetee, moveset } = frontmatter;
const pmoves = getPMoves().filter((pm) => moveset.includes(pm.data.title));
---

<div id="pokoman-layout" class="flex flex-col max-w-2xl m-auto">
  <div class="flex justify-center mb-8">
    <div class="avatar w-52">
      <img
        src={`/src/images/${frontmatter.title.toLowerCase()}.svg`}
        alt={`The Pokoman named ${frontmatter.title}`}
        width={400}
        class="bg-base-200 shadow-xl rounded-full ring ring-primary ring-offset-base-100 ring-offset-2"
      />
    </div>
  </div>

  <h1 class="text-center">{frontmatter.title}</h1>
  <p class="text-center mb-4">{frontmatter.intro}</p>

  <div class="text-center">
    <h2 class="text-center">Description</h2>
    <slot />
  </div>

  <ul class="stats shadow flex flex-wrap flex-auto justify-center my-10">
    <StatLayout
      data={{
        stat: "HP",
        value: hp,
        tooltip: "Hit points",
        toast: "This is the Pokoman's Hit Points.",
      }}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        class="inline-block w-8 h-8 stroke-current"
        ><path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
        ></path></svg
      >
    </StatLayout>

    <StatLayout
      data={{
        stat: "Attack",
        value: attack,
        tooltip: "Attack",
        toast: "This is the Pokoman's Attack power.",
      }}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        class="inline-block w-8 h-8 stroke-current"
        ><path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
        ></path></svg
      >
    </StatLayout>

    <StatLayout
      data={{
        stat: "Defance",
        value: defance,
        tooltip: "Defense",
        toast: "This is the Pokoman's Defense rating.",
      }}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        class="inline-block w-8 h-8 stroke-current"
        ><path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
        ></path></svg
      >
    </StatLayout>

    <StatLayout
      data={{
        stat: "Ageeleetee",
        value: ageeleetee,
        tooltip: "Agility",
        toast: "This is the Pokoman's Agility rating.",
      }}
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        class="inline-block w-8 h-8 stroke-current"
        ><path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
        ></path></svg
      >
    </StatLayout>
  </ul>

  <h2 class="text-center mb-8">Moveset</h2>

  <div class="w-full inline-grid mb-10">
    <div class="carousel w-full">
      {
        pmoves.map((pm, i) => (
          <div
            id={`move${i}`}
            class="carousel-item w-full max-w-xs lg:max-w-sm flex justify-center"
          >
            <MoveCard pmove={pm.data} />
          </div>
        ))
      }
    </div>
    <div class="flex justify-center w-full py-2 gap-2">
      <a href="#move0" class="btn btn-xs">1</a>
      <a href="#move1" class="btn btn-xs">2</a>
      <a href="#move2" class="btn btn-xs">3</a>
      <a href="#move3" class="btn btn-xs">4</a>
    </div>
  </div>

  <h4 class="text-center">
    Creator: {frontmatter.creator}
  </h4>
</div>
